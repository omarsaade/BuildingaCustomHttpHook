{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction useHttp() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET ',\n        headers: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        body: requestConfig.body ? requestConfig.body : {}\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n}\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"names":["React","useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/components/hooks/use-http.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction useHttp() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const sendRequest = async (requestConfig, applyData) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(requestConfig.url, {\r\n                method: requestConfig.method ? requestConfig.method : 'GET ',\r\n                headers: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n\r\n                body: requestConfig.body ? requestConfig.body : {},\r\n            }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n\r\n            applyData(data);\r\n\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n\r\n    return { isLoading, error, sendRequest }\r\n}\r\n\r\nexport default useHttp"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;EAGA,MAAMM,WAAW,GAAG,OAAOC,aAAP,EAAsBC,SAAtB,KAAoC;IACpDL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAf,EAAoB;QAC5CC,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,MADV;QAE5CC,OAAO,EAAEN,aAAa,CAACO,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeT,aAAa,CAACO,IAA7B,CAArB,GAA0D,IAFvB;QAI5CA,IAAI,EAAEP,aAAa,CAACO,IAAd,GAAqBP,aAAa,CAACO,IAAnC,GAA0C;MAJJ,CAApB,CAA5B;;MAQA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MAGAZ,SAAS,CAACW,IAAD,CAAT;IAGH,CAnBD,CAmBE,OAAOE,GAAP,EAAY;MACVhB,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACDnB,YAAY,CAAC,KAAD,CAAZ;EACH,CA1BD;;EA8BA,OAAO;IAAED,SAAF;IAAaE,KAAb;IAAoBE;EAApB,CAAP;AACH;;GArCQL,O;;AAuCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}