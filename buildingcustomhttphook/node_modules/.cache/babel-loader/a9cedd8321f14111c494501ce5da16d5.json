{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omar\\\\Documents\\\\BuildingaCustomHttpHook\\\\BuildingaCustomHttpHook\\\\buildingcustomhttphook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useFetch from './components/hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, isLoading, error, f, setTasks, createdTasko] = useFetch(\"GET\");\n  useEffect(() => {\n    // console.log('start');\n    f();\n  }, []);\n\n  const taskAddHandler = createdTasko => {\n    setTasks(prevTasks => prevTasks.concat(createdTasko));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: f\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"CnuNUPyn/h/frjWRo2o8tsJQAe4=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App; // ====================\n// import React, { useEffect, useState } from 'react';\n// import Tasks from './components/Tasks/Tasks';\n// import NewTask from './components/NewTask/NewTask';\n// function App() {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [tasks, setTasks] = useState([]);\n//   const fetchTasks = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n//       const data = await response.json();\n//       //\n//       const loadedTasks = [];\n//       for (const taskKey in data) {\n//         loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n//       }\n//       //\n//       setTasks(loadedTasks);\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []); \n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <>\n//       <NewTask onAddTask={taskAddHandler} />\n//       <Tasks items={tasks} loading={isLoading} error={error} onFetch={fetchTasks} />\n//     </>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","useFetch","App","tasks","isLoading","error","f","setTasks","createdTasko","taskAddHandler","prevTasks","concat"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useFetch from './components/hooks/useFetch';\n\nfunction App() {\n\n\n  const [tasks, isLoading, error, f, setTasks, createdTasko] = useFetch(\"GET\");\n  useEffect(() => {\n    // console.log('start');\n    f();\n  }, []);\n\n\n\n  const taskAddHandler = (createdTasko) => {\n\n    setTasks((prevTasks) => prevTasks.concat(createdTasko));\n  };\n\n\n\n\n  return (\n    <>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks items={tasks} loading={isLoading} error={error} onFetch={f} />\n    </>\n  );\n}\n\nexport default App;\n\n\n// ====================\n\n\n// import React, { useEffect, useState } from 'react';\n// import Tasks from './components/Tasks/Tasks';\n// import NewTask from './components/NewTask/NewTask';\n\n// function App() {\n\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [tasks, setTasks] = useState([]);\n\n\n\n//   const fetchTasks = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\n\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n\n//       const data = await response.json();\n\n//       //\n//       const loadedTasks = [];\n\n//       for (const taskKey in data) {\n//         loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n//       }\n\n//       //\n//       setTasks(loadedTasks);\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n\n\n\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []); \n\n\n\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n\n\n\n//   return (\n//     <>\n//       <NewTask onAddTask={taskAddHandler} />\n//       <Tasks items={tasks} loading={isLoading} error={error} onFetch={fetchTasks} />\n//     </>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAM,CAACC,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,CAA1B,EAA6BC,QAA7B,EAAuCC,YAAvC,IAAuDP,QAAQ,CAAC,KAAD,CAArE;EACAJ,SAAS,CAAC,MAAM;IACd;IACAS,CAAC;EACF,CAHQ,EAGN,EAHM,CAAT;;EAOA,MAAMG,cAAc,GAAID,YAAD,IAAkB;IAEvCD,QAAQ,CAAEG,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBH,YAAjB,CAAhB,CAAR;EACD,CAHD;;EAQA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAS,SAAS,EAAEC;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,KAAK,EAAEN,KAAd;MAAqB,OAAO,EAAEC,SAA9B;MAAyC,KAAK,EAAEC,KAAhD;MAAuD,OAAO,EAAEC;IAAhE;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GAzBQJ,G;UAGsDD,Q;;;KAHtDC,G;AA2BT,eAAeA,GAAf,C,CAGA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}