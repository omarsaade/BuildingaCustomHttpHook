{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction useFetch(method) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const f = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      if (method === \"GET\") {\n        const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\n      } else {\n        const responsea = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json', {\n          method: 'POST',\n          body: JSON.stringify({\n            text: taskText\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      if (method === \"GET\") {\n        const loadedTasks = [];\n\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            text: data[taskKey].text\n          });\n        }\n\n        setTasks(loadedTasks);\n      } else {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n        const createdTask = {\n          id: generatedId,\n          text: taskText\n        };\n        props.onAddTask(createdTask);\n      }\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return [tasks, isLoading, error, f];\n}\n\n_s(useFetch, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\n\nexport default useFetch; //post or get","map":{"version":3,"names":["React","useState","useFetch","method","isLoading","setIsLoading","error","setError","tasks","setTasks","f","taskText","response","fetch","responsea","body","JSON","stringify","text","headers","ok","Error","data","json","loadedTasks","taskKey","push","id","generatedId","name","createdTask","props","onAddTask","err","message"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/components/hooks/useFetch.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction useFetch(method) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n\r\n    const f = async (taskText) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            if (method === \"GET\") {\r\n                const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\r\n\r\n            } else {\r\n                const responsea = await fetch(\r\n                    'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({ text: taskText }),\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                    }\r\n                );\r\n            }\r\n\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n            const data = await response.json();\r\n\r\n\r\n\r\n\r\n            if (method === \"GET\") {\r\n                const loadedTasks = [];\r\n\r\n                for (const taskKey in data) {\r\n                    loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n                }\r\n                setTasks(loadedTasks);\r\n\r\n\r\n\r\n\r\n\r\n            } else {\r\n                const generatedId = data.name; // firebase-specific => \"name\" contains generated id\r\n                const createdTask = { id: generatedId, text: taskText };\r\n\r\n                props.onAddTask(createdTask);\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return [tasks, isLoading, error, f];\r\n}\r\n\r\nexport default useFetch\r\n\r\n//post or get"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;EAAA;;EAEtB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;EAIA,MAAMS,CAAC,GAAG,MAAOC,QAAP,IAAoB;IAC1BN,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MAEA,IAAIJ,MAAM,KAAK,KAAf,EAAsB;QAClB,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;MAEH,CAHD,MAGO;QACH,MAAMC,SAAS,GAAG,MAAMD,KAAK,CACzB,iEADyB,EAEzB;UACIV,MAAM,EAAE,MADZ;UAEIY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAAEC,IAAI,EAAEP;UAAR,CAAf,CAFV;UAGIQ,OAAO,EAAE;YACL,gBAAgB;UADX;QAHb,CAFyB,CAA7B;MAUH;;MAGD,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MACD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;;MAKA,IAAIpB,MAAM,KAAK,KAAf,EAAsB;QAClB,MAAMqB,WAAW,GAAG,EAApB;;QAEA,KAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;UACxBE,WAAW,CAACE,IAAZ,CAAiB;YAAEC,EAAE,EAAEF,OAAN;YAAeP,IAAI,EAAEI,IAAI,CAACG,OAAD,CAAJ,CAAcP;UAAnC,CAAjB;QACH;;QACDT,QAAQ,CAACe,WAAD,CAAR;MAMH,CAZD,MAYO;QACH,MAAMI,WAAW,GAAGN,IAAI,CAACO,IAAzB,CADG,CAC4B;;QAC/B,MAAMC,WAAW,GAAG;UAAEH,EAAE,EAAEC,WAAN;UAAmBV,IAAI,EAAEP;QAAzB,CAApB;QAEAoB,KAAK,CAACC,SAAN,CAAgBF,WAAhB;MAEH;IAKJ,CAlDD,CAkDE,OAAOG,GAAP,EAAY;MACV1B,QAAQ,CAAC0B,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACD7B,YAAY,CAAC,KAAD,CAAZ;EACH,CAzDD;;EA4DA,OAAO,CAACG,KAAD,EAAQJ,SAAR,EAAmBE,KAAnB,EAA0BI,CAA1B,CAAP;AACH;;GArEQR,Q;;AAuET,eAAeA,QAAf,C,CAEA"},"metadata":{},"sourceType":"module"}