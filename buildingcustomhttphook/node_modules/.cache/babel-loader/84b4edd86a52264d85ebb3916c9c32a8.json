{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omar\\\\Documents\\\\BuildingaCustomHttpHook\\\\BuildingaCustomHttpHook\\\\buildingcustomhttphook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport usehttp from './components/hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = tasksObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  usehttp({\n    url: 'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json'\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","usehttp","App","tasks","setTasks","transformTasks","tasksObj","loadedTasks","taskKey","data","push","id","text","url","fetchTasks","taskAddHandler","task","prevTasks","concat","isLoading","error"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport usehttp from './components/hooks/use-http';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);\n\n\n  const transformTasks = tasksObj => {\n\n    const loadedTasks = [];\n\n\n\n    for (const taskKey in data) {\n\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n\n    }\n\n\n\n    setTasks(loadedTasks);\n\n\n\n  }\n  usehttp({ url: 'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json' },);\n\n\n\n\n\n\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n\n\n  return (\n    <>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks items={tasks} loading={isLoading} error={error} onFetch={fetchTasks} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;EAGA,MAAMO,cAAc,GAAGC,QAAQ,IAAI;IAEjC,MAAMC,WAAW,GAAG,EAApB;;IAIA,KAAK,MAAMC,OAAX,IAAsBC,IAAtB,EAA4B;MAE1BF,WAAW,CAACG,IAAZ,CAAiB;QAAEC,EAAE,EAAEH,OAAN;QAAeI,IAAI,EAAEH,IAAI,CAACD,OAAD,CAAJ,CAAcI;MAAnC,CAAjB;IAED;;IAIDR,QAAQ,CAACG,WAAD,CAAR;EAID,CAlBD;;EAmBAN,OAAO,CAAC;IAAEY,GAAG,EAAE;EAAP,CAAD,CAAP;EAQAhB,SAAS,CAAC,MAAM;IACdiB,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;;EAMA,MAAMC,cAAc,GAAIC,IAAD,IAAU;IAC/BZ,QAAQ,CAAEa,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;EACD,CAFD;;EAMA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAS,SAAS,EAAED;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,KAAK,EAAEZ,KAAd;MAAqB,OAAO,EAAEgB,SAA9B;MAAyC,KAAK,EAAEC,KAAhD;MAAuD,OAAO,EAAEN;IAAhE;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GAlDQZ,G;;KAAAA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}