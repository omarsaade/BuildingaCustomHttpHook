{"ast":null,"code":"// import { useState } from 'react';\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n// const NewTask = (props) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n// export default NewTask;\n// ========================\nimport { useState } from 'react'; // import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n// const NewTask = (props) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n// export default NewTask;","map":{"version":3,"names":["useState"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/components/NewTask/NewTask.js"],"sourcesContent":["// import { useState } from 'react';\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n\n// const NewTask = (props) => {\n\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n\n\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n\n\n// export default NewTask;\n\n\n// ========================\n\n\nimport { useState } from 'react';\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n\n// const NewTask = (props) => {\n\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n\n\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n\n\n// export default NewTask;\n"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA"},"metadata":{},"sourceType":"module"}