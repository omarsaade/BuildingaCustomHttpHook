{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omar\\\\Documents\\\\BuildingaCustomHttpHook\\\\BuildingaCustomHttpHook\\\\buildingcustomhttphook\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [tasks, isLoading, error, f] = useFetch(\"POST\");\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: f,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"OC/aKGjc+k9qi9P3vxznnIetMdc=\", false, function () {\n  return [useFetch];\n});\n\n_c = NewTask;\nexport default NewTask; // ========================\n// import { useState } from 'react';\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n// const NewTask = (props) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n// export default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useFetch","NewTask","props","tasks","isLoading","error","f"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useFetch from '../hooks/useFetch';\n\nconst NewTask = (props) => {\n\n  const [tasks, isLoading, error, f] = useFetch(\"POST\");\n\n\n\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={f} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\n\nexport default NewTask;\n\n\n// ========================\n\n\n// import { useState } from 'react';\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n\n// const NewTask = (props) => {\n\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n\n//       const data = await response.json();\n//       //\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n\n//       props.onAddTask(createdTask);\n//       //\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n\n\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n\n\n// export default NewTask;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EAEzB,MAAM,CAACC,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,CAA1B,IAA+BN,QAAQ,CAAC,MAAD,CAA7C;EAKA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEM,CAAvB;MAA0B,OAAO,EAAEF;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAbD;;GAAMJ,O;UAEiCD,Q;;;KAFjCC,O;AAgBN,eAAeA,OAAf,C,CAGA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA"},"metadata":{},"sourceType":"module"}