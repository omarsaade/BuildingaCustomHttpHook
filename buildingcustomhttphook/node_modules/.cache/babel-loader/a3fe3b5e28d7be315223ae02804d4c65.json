{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nfunction useFetch(method) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const f = async taskText => {\n    // console.log(taskText);\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      if (method === \"GET\") {\n        console.log(\"get\");\n        const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\n\n        if (!response.ok) {\n          throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n        const loadedTasks = [];\n\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            text: data[taskKey].text\n          });\n        }\n\n        setTasks(loadedTasks);\n      } else {\n        console.log(\"post\");\n        const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json', {\n          method: 'POST',\n          body: JSON.stringify({\n            text: taskText\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n        const generatedId = data.name;\n        const createdTask = {\n          id: generatedId,\n          text: taskText\n        }; // props.onAddTask(createdTask);\n      }\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return [tasks, isLoading, error, f, setTasks, createdTask];\n}\n\n_s(useFetch, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\n\nexport default useFetch;","map":{"version":3,"names":["React","useEffect","useState","useFetch","method","isLoading","setIsLoading","error","setError","tasks","setTasks","f","taskText","console","log","response","fetch","ok","Error","data","json","loadedTasks","taskKey","push","id","text","body","JSON","stringify","headers","generatedId","name","createdTask","err","message"],"sources":["C:/Users/omar/Documents/BuildingaCustomHttpHook/BuildingaCustomHttpHook/buildingcustomhttphook/src/components/hooks/useFetch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction useFetch(method) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n    const f = async (taskText) => {\r\n        // console.log(taskText);\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            if (method === \"GET\") {\r\n                console.log(\"get\");\r\n                const response = await fetch('https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json');\r\n                if (!response.ok) {\r\n                    throw new Error('Request failed!');\r\n                }\r\n                const data = await response.json();\r\n                const loadedTasks = [];\r\n\r\n                for (const taskKey in data) {\r\n                    loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n                }\r\n                setTasks(loadedTasks);\r\n\r\n            } else {\r\n                console.log(\"post\");\r\n                const response = await fetch(\r\n                    'https://react-http-38b54-default-rtdb.firebaseio.com/tasks.json',\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({ text: taskText }),\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Request failed!');\r\n                }\r\n\r\n                const data = await response.json();\r\n                const generatedId = data.name;\r\n                const createdTask = { id: generatedId, text: taskText };\r\n\r\n                // props.onAddTask(createdTask);\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    return [tasks, isLoading, error, f, setTasks, createdTask];\r\n}\r\n\r\nexport default useFetch\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;EAAA;;EACtB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;EAGA,MAAMS,CAAC,GAAG,MAAOC,QAAP,IAAoB;IAC1B;IACAN,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MAEA,IAAIJ,MAAM,KAAK,KAAf,EAAsB;QAClBS,OAAO,CAACC,GAAR,CAAY,KAAZ;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;QACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;QACH;;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACA,MAAMC,WAAW,GAAG,EAApB;;QAEA,KAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;UACxBE,WAAW,CAACE,IAAZ,CAAiB;YAAEC,EAAE,EAAEF,OAAN;YAAeG,IAAI,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcG;UAAnC,CAAjB;QACH;;QACDf,QAAQ,CAACW,WAAD,CAAR;MAEH,CAdD,MAcO;QACHR,OAAO,CAACC,GAAR,CAAY,MAAZ;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iEADwB,EAExB;UACIZ,MAAM,EAAE,MADZ;UAEIsB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAAEH,IAAI,EAAEb;UAAR,CAAf,CAFV;UAGIiB,OAAO,EAAE;YACL,gBAAgB;UADX;QAHb,CAFwB,CAA5B;;QAWA,IAAI,CAACd,QAAQ,CAACE,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;QACH;;QAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACA,MAAMU,WAAW,GAAGX,IAAI,CAACY,IAAzB;QACA,MAAMC,WAAW,GAAG;UAAER,EAAE,EAAEM,WAAN;UAAmBL,IAAI,EAAEb;QAAzB,CAApB,CAnBG,CAqBH;MAGH;IAGJ,CA3CD,CA2CE,OAAOqB,GAAP,EAAY;MACVzB,QAAQ,CAACyB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACD5B,YAAY,CAAC,KAAD,CAAZ;EACH,CAnDD;;EAwDA,OAAO,CAACG,KAAD,EAAQJ,SAAR,EAAmBE,KAAnB,EAA0BI,CAA1B,EAA6BD,QAA7B,EAAuCsB,WAAvC,CAAP;AACH;;GA/DQ7B,Q;;AAiET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}